console.clear();
console.log("INHERITANCE SAMPLE (descriptions generated by three classes, created with inheritance):");

Simple.defineClass("App.Car", null, {
	mixins: [ "events" ],
	constructor: function(name) {
		this.name = name;
	},
	getDescription: function() {
		return "Hi, I am car and my name is " + this.name + ". ";
	},
	run: function() {
		return this.trigger("run", this.getDescription());
	}
});

Simple.defineClass("App.Sport.SportCar", App.Car, {
	constructor: function(name, league) {
		this.baseconstructor.apply(this, arguments);
		this.league = league;
	},
	getDescription: function() {
		return App.Car.prototype.getDescription.apply(this) +  "Also I like racing, such as " + this.league + ".";
	}
});

Simple.defineClass("App.Sport.Nissan", App.Sport.SportCar, {
	conditioner: "Mild Flow",
	constructor: function(name, league, model) {
		this.baseconstructor.apply(this, arguments);
		this.model = model;
		this.name = name + " (" + this.model + ")";
	},
	getDescription: function() {
		return App.Sport.SportCar.prototype.getDescription.apply(this) + " I have " + this.conditioner + " system.";
	}
});

var car = new App.Car("Ford");
console.log(car.getDescription());
//Hi, I am car and my name is Ford.

var sportcar = new App.Sport.SportCar("Porsche", "Tour de france");
console.log(sportcar.getDescription());
//Hi, I am car and my name is Porsche. Also I like racing, such as Tour de france

var nissan = new App.Sport.Nissan("Nissan black", "F1", "Qashqai XE");
nissan.on("run", function(target, description) {
	console.log(description);
	//Hi, I am car and my name is Nissan black (Qashqai XE). Also I like racing, such as F1 I have Mild Flow system.
}).run().off("run");



console.log("-----------------------------------------------------------------------------");
console.log("MIXIN SAMPLE:");

Simple.defineMixin("myExtension", {
	extraMethod: function() {
		console.log("logged from mixin method added to 'App.SomeClass' class");
	}
});
Simple.defineClass("App.SomeClass", null, {
	mixins: [ "myExtension" ]
});

var some = new App.SomeClass();
some.extraMethod(); //'extra method'



console.log("-----------------------------------------------------------------------------");
console.log("EVENT NAMESPACE SAMPLE:");

nissan.on("run", function() { console.log("   handler #1"); }, this)
	  .on("run.plugins", function() { console.log("   handler #2"); }, this)
	  .on("run.watchPlugin.plugins", function() { console.log("   handler #3"); }, this);

nissan.trigger("run"); //handler #1  handler #2  handler #3

console.log("remove 'run' event handlers for 'watchPlugin.plugins' namespace");
nissan.off("run.watchPlugin.plugins")
	  .trigger("run"); //handler #1  handler #2

console.log("remove 'run' event handlers for 'plugins' namespace");
nissan.off("run.plugins")
	  .trigger("run"); //handler #1

console.log("remove 'run' event handlers");
nissan.off("run")
	  .trigger("run"); //

console.log("remove all events handlers");
nissan.off()
	  .trigger("run")  //

